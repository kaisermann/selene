// Mixin shortcuts
max = to-width
min = from-width

// size(width, height)
size($width, $height = $width, $cache = false)
	if($cache)
		+cache('w' + $width)
			width: $width
		+cache('h' + $height)
			height: $height
	else
		width: $width
		height: $height

// rem(px [,base-font-size]), em(px [,base-font-size])
rem($px, $base = crius.baseFontSize)
	return unit($px / $base, "rem")

em($px, $base = crius.baseFontSize)
	return unit($px / $base, "em")

// Font-face mixin, by jackbrewer
// https://github.com/jackbrewer/stylus-mixins/
font-face($font-name, $file-path, $weight = 'normal', $style = 'normal')
	$url-fallback = 'url("' + $file-path + '.eot")'
	$url  = 'url("' + $file-path + '.eot?#iefix") format("embedded-opentype"), '
	$url = $url + 'url("' + $file-path + '.woff") format("woff"), '
	$url = $url + 'url("' + $file-path + '.ttf") format("truetype"), '
	$url = $url + 'url("' + $file-path + '.svg#svg' + replace(' ', '', $font-name) + '") format("svg")'
	@font-face
		font-family: $font-name
		src: unquote($url-fallback)
		src: unquote($url)
		font-weight: unquote($weight)
		font-style: unquote($style)

// Responsive class factory. Uses the breakpoints from rolleiflex.
// Generates .selector@xx classes
responsify()
	for key, value in rolleiflex.breakpoints
		if(value.breakpoint == 0)
			&\\\@{key}
				{block}
		else
			&\\\@{key}
				+min(key)
					{block}

// Tells if a color is bright or dark (values of +-150> means bright)
getPerceivedBrightness($color)
	return round((((red($color) ** 2) * 0.241) + ((green($color) ** 2) * 0.691) +	((blue($color) ** 2) * 0.068)) ** (1 / 2))
